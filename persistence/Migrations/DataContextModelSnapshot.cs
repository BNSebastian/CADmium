// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using persistence;

#nullable disable

namespace persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("domain.Materials.Concrete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float?>("CharacteristicCompressiveStrength")
                        .IsRequired()
                        .HasColumnType("REAL");

                    b.Property<float?>("CharacteristicTensileStrength")
                        .IsRequired()
                        .HasColumnType("REAL");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float?>("DesignCompressiveStrength")
                        .HasColumnType("REAL");

                    b.Property<float?>("DesignTensileStrength")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Concrete");
                });

            modelBuilder.Entity("domain.Materials.Steel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Steel");
                });
#pragma warning restore 612, 618
        }
    }
}
